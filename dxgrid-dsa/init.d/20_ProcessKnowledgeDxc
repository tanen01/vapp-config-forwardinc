echo "[20] Running 'ProcessKnowledgeDxc'"

mkdir -p /solution/$CONFIG/config/knowledge
FILE=/solution/$CONFIG/config/knowledge/dsas.dxc

# Configure dsa knowledge file. Write all dsas into dsas.dxc
while true; do
	. /solution/common/misc/getAllEtcdPods
	
	numDsas=$(echo "$allDsas" | jq -r ".node.nodes | length")
	if [ $numDsas -le 0 ]; then
		echo "[20] no dsas in etcd. allDsas: $allDsas"
		sleep 10
		continue
	fi
	
	# maxIndex is the largest modifiedIndex. +1 to this value and use it as the waitIndex in the next step
	maxIndex=$(echo $allDsas | jq '.node.nodes | max_by(.modifiedIndex) | .modifiedIndex + 1')
	echo "[20] numDsas:$numDsas maxIndex:$maxIndex"
	if ! echo "$maxIndex" | egrep -q '^[0-9]+$'; then
		echo "[20] invalid maxIndex. allDsas: $allDsas"
		sleep 10
		continue
	fi
	
	cat <<EOM >$FILE.bak
# This file is automatically generated

EOM

	sortedDsas=$(echo $allDsas | jq -r '.node.nodes | sort_by(.key | ltrimstr("/dsas/") | tonumber) | .[] | .value+"/"+(.key | ltrimstr("/dsas/"))')
	for aDsa in $sortedDsas; do
		echo "[20] aDsa:$aDsa"
		dsaNumber=$(echo $aDsa | cut -d/ -f 3)
		dsaIP=$(echo $aDsa | cut -d/ -f 2)
		echo "[20] dsaNumber:$dsaNumber dsaIP:$dsaIP"
		
		if [ -z "$dsaNumber" ] || [ -z "$dsaIP" ]; then
			continue
		fi
	
		cat <<EOM >>$FILE.bak
set dsa "dsa$dsaNumber" =
{
    prefix        = <dc ca><dc ForwardInc>
    dsa-name      = <dc ca><dc ForwardInc><cn "dsa$dsaNumber">
    dsa-password  = "password"
    address       = tcp "$dsaIP" port 2389
    disp-psap     = DISP
    snmp-port     = 2389
    console-port  = 2345
    dsa-flags     = multi-write, load-share, no-service-while-recovering
    trust-flags   = allow-check-password
};


EOM
	done
	
	# All done. Break loop.
	break 
done

mv -f $FILE.bak $FILE
